!function(){if(self.document){const e=document.currentScript.src;new URLSearchParams(e.split("?")[1]).get("install")?navigator.serviceWorker.register(document.currentScript.src).catch(function(e){console.log("cache failed with "+e)}):(console.log("uninstall service worker."),navigator.serviceWorker.getRegistrations().then(function(e){for(var t of e)t.active&&t.active.scriptURL&&-1!==t.active.scriptURL.indexOf("/sw.min.js")&&t.unregister()}),window.caches&&caches.keys&&caches.keys().then(function(e){e.forEach(function(e){console.log("delete cache",e),caches.delete(e)})}))}else{const n="Dream-1.0.0",o=new URLSearchParams(location.href.split("?")[1]).get("offLine"),c=[new RegExp(location.origin+"/themes","i"),/\/\/(unpkg\.com|npm\.elemecdn\.com|cdn\.jsdelivr\.net)\/.*/i],a=[new RegExp(location.origin+"/upload","i"),/\/\/cdn.jsdelivr.net\/gh.*/i],l=[new RegExp(location.origin+"/(admin|api)","i")],u={theme:{originUrl:location.origin+"/themes/dream",handleRequest:e=>{var t,n;if(0===e.indexOf(u.theme.originUrl))return t=e.substring(u.theme.originUrl.length),n=new URLSearchParams(e.split("?")[1]).get("mew")||"latest",[e,"https://unpkg.com/halo-theme-dream@"+n+t,"https://cdn.jsdelivr.net/gh/nineya/halo-theme-dream@"+n+t]}},npm:{urlTemplates:["https://unpkg.com","https://cdn.jsdelivr.net/npm","https://npm.elemecdn.com"],handleRequest:e=>{var t,n=u.npm.urlTemplates,r=e;for(t in n)if(0===r.indexOf(n[t])){const s=r.substring(n[t].length);return n.map(e=>e+s)}}}};function t(e,t){return e.some(function(e){return e.test(t)})}function i(e,t){const n=new Set(["mew","v","version","t","time","ts","timestamp"]),r=e.split("?"),s=t.split("?");if(r[0]===s[0]){const i=new URLSearchParams("?"+r[1]),o=new URLSearchParams("?"+s[1]);for(const e of i.keys())if(!n.has(e)&&i.get(e)!==o.get(e))return;return 1}}self.addEventListener("install",function(e){console.log("install service worker."),e.waitUntil(self.skipWaiting())}),self.addEventListener("activate",function(e){console.log("service worker activate.");const t=[n];return e.waitUntil(caches.keys().then(function(e){return Promise.all(e.map(function(e){if(-1===t.indexOf(e))return console.info("version changed, clean the cache, SW: deleting "+e),caches.delete(e)}))})),self.clients.claim()}),self.addEventListener("fetch",function(r){if("GET"!==r.request.method)return!1;const e=t(a,r.request.url),s=t(c,r.request.url);if(!e&&!s||t(l,r.request.url))return!!o&&(r.respondWith(caches.open(n).then(t=>fetch(r.request).then(e=>(200===e.status&&t.put(r.request,e.clone()),e)).catch(()=>t.match(r.request)))),!0);r.respondWith(caches.open(n).then(function(t){return t.matchAll(r.request,{ignoreSearch:!0}).then(function(n){return function(e){if(n)for(const t of n)if((t.url||t.headers.get("service-worker-origin"))===e)return t;return null}(r.request.url)||function(e,t){if(!t)return fetch(e);var n=e.url;for(const e in u){const t=u[e].handleRequest(n);if(t){var r=n;var s=t;const i=new AbortController,o=i.signal,c=s.map(e=>new Promise(async(t,n)=>{fetch(e,{signal:o}).then(async e=>{const t=new Headers(e.headers);return t.set("service-worker-origin",r),new Response(await e.arrayBuffer(),{status:e.status,headers:t})}).then(e=>{200!==e.status&&n(null),i.abort(),t(e)}).catch(()=>n(null))}));return Promise.any||(Promise.any=function(e){return new Promise((t,n)=>{let r=(e=Array.isArray(e)?e:[]).length,s=[];if(0===r)return n(new AggregateError("All promises were rejected"));e.forEach(e=>{if(!e instanceof Promise)return n(e);e.then(e=>t(e),e=>{r--,s.push(e),0===r&&n(new AggregateError(s))})})})}),Promise.any(c).catch(()=>null);return}}return fetch(e)}(r.request,s).then(e=>{if(n)for(const e of n)i(e.url,r.request.url)&&t.delete(e.url);return t.put(r.request,e.clone()),e}).catch(e=>{if(console.error(e),n)for(const e of n)if(i(e.url,r.request.url))return e})})}))})}}();